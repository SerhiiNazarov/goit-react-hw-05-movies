{"version":3,"file":"static/js/211.fb36d58b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/SearchResults/SearchResults.styled.jsx","components/SearchResults/SearchResults.jsx","services/getMovieSearch.js","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Loader_overlay__vojGq\",\"ldsRoller\":\"Loader_ldsRoller__5cE1k\"};","import style from './Loader.module.css';\n\nfunction Loader() {\n  return (\n    <div className={style.overlay}>\n      <div className={style.ldsRoller}>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  margin: 20px 0px 20px 20px;\n  padding: 6px 12px;\n  width: 250px;\n  border-radius: 6px 0px 0px 6px;\n  border: 2px solid;\n  border-right: none;\n  outline: none;\n\n  font-size: 16px;\n  &:hover,\n  &:focus {\n    border-color: #2196f3;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 6px 12px;\n\n  border-radius: 0px 6px 6px 0px;\n  border: 2px solid;\n  outline: none;\n\n  font-size: 16px;\n  &:hover,\n  &:focus {\n    background-color: #b1e0f2;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Button } from './SearchForm.styled';\n\nconst SearchForm = ({ setSearchParams }) => {\n  const [movieInput, setMovieInput] = useState('');\n\n  const onInputChange = e => {\n    const { value } = e.target;\n    setMovieInput(value);\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    setSearchParams(movieInput !== '' ? { query: movieInput.trim() } : {});\n    setMovieInput('');\n  };\n\n  return (\n    <>\n      <form onSubmit={onFormSubmit}>\n        <Input\n          onChange={onInputChange}\n          type=\"text\"\n          name=\"searchInput\"\n          value={movieInput}\n          placeholder=\"Enter movie name\"\n        />\n        <Button>Search</Button>\n      </form>\n    </>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  setSearchParams: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-left: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const SearchList = styled.ul`\n  margin-left: 50px;\n  margin-bottom: 15px;\n  list-style-type: disc;\n`;\n\nexport const SearchItem = styled.li`\n  margin-bottom: 5px;\n  :hover,\n  :focus {\n    color: #2196f3;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Title, SearchList, SearchItem } from './SearchResults.styled';\n\nconst SearchResults = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <Title>Search results</Title>\n      <SearchList>\n        {movies.map(movie => (\n          <SearchItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </SearchItem>\n        ))}\n      </SearchList>\n    </>\n  );\n};\n\nexport default SearchResults;\n\nSearchResults.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n","import axios from 'axios';\n\nconst getMovieSearch = async params => {\n  const config = {\n    url: `/search/movie`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '65573c76cf88d807ccbaf09ca79feb15',\n      query: params,\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.results;\n};\n\nexport default getMovieSearch;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 20px 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport SearchForm from 'components/SearchForm';\nimport SearchResults from 'components/SearchResults';\nimport getMovieSearch from 'services/getMovieSearch';\nimport { Section } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [nothingFound, setNothingFound] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const params = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!params) return;\n    setNothingFound(false);\n    setError(null);\n    setIsLoading(true);\n    getMovieSearch(params)\n      .then(response => {\n        setMovies(response);\n        if (response.length === 0) setNothingFound(true);\n      })\n      .catch(error => setError(error.message))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [params]);\n\n  return (\n    <>\n      <Section>\n        <SearchForm setSearchParams={setSearchParams} />\n      </Section>\n\n      {error && <p style={{ marginLeft: '50px' }}>Oops, some error:{error}</p>}\n\n      {movies.length > 0 && (\n        <Section>\n          <SearchResults movies={movies} />\n        </Section>\n      )}\n      {nothingFound && (\n        <p style={{ marginLeft: '50px' }}>\n          Oops...Nothing was found.Try to enter something else.\n        </p>\n      )}\n\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["className","style","Input","styled","Button","setSearchParams","useState","movieInput","setMovieInput","onSubmit","e","preventDefault","query","trim","onChange","value","target","type","name","placeholder","Title","SearchList","SearchItem","movies","location","useLocation","map","movie","to","id","state","from","title","getMovieSearch","params","config","url","baseURL","api_key","axios","response","data","results","Section","setMovies","isLoading","setIsLoading","error","setError","nothingFound","setNothingFound","useSearchParams","searchParams","get","useEffect","then","length","catch","message","finally","marginLeft","Loader"],"sourceRoot":""}