{"version":3,"file":"static/js/941.fe649bc5.chunk.js","mappings":"sKACA,MAA0B,wBAA1B,EAA8D,0B,SCkB9D,MAjBA,WACE,OACE,gBAAKA,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,uBAIP,C,gMCfYC,EAAWC,EAAAA,GAAAA,GAAH,kMASRC,EAAWD,EAAAA,GAAAA,GAAH,iMAORE,EAAWF,EAAAA,GAAAA,EAAH,yF,kBCWrB,EAzBkB,SAAC,GAAiB,IAAfG,EAAc,EAAdA,QACnB,OACE,+BACE,SAACJ,EAAD,UACGI,GACCA,EAAQC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACrC,OACE,UAACP,EAAD,YACE,gBACEQ,IACmB,OAAjBH,EACII,EADJ,0CAEuCJ,GAEzCK,IAAKJ,KAEP,SAACL,EAAD,UAAWK,KACX,UAACL,EAAD,yBAAsBM,OAVTH,EAalB,OAIV,E,6CC1BKO,EAAe,mCAAG,WAAMC,GAAN,gFAChBC,EAAS,CACbC,IAAI,UAAD,OAAYF,EAAZ,YACHG,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCALS,UASCC,EAAAA,EAAAA,GAAML,GATP,cAShBM,EATgB,yBAUfA,EAASC,KAAKC,MAVC,2CAAH,sDAarB,ICbaC,EAAUvB,EAAAA,GAAAA,QAAH,oGCqCpB,EA9Ba,WACX,OAA8BwB,EAAAA,EAAAA,UAAS,IAAvC,eAAOrB,EAAP,KAAgBsB,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEQhB,GAAYiB,EAAAA,EAAAA,MAAZjB,QAcR,OAZAkB,EAAAA,EAAAA,YAAU,WACRJ,GAAa,GACbf,EAAgBC,GACbmB,MAAK,SAAAZ,GACJK,EAAWL,EACZ,IACAa,OAAM,SAAAL,GAAK,OAAIC,EAASD,EAAMM,QAAnB,IACXC,SAAQ,WACPR,GAAa,EACd,GACJ,GAAE,CAACd,KAGF,gCACGa,IAAa,SAACU,EAAA,EAAD,IACbR,IAAS,6CAAqBA,MAC/B,SAACL,EAAD,WACE,SAAC,EAAD,CAAWpB,QAASA,QAI3B,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/MovieCast/MovieCast.styled.jsx","components/MovieCast/MovieCast.jsx","services/getMovieCredits.js","pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Loader_overlay__vojGq\",\"ldsRoller\":\"Loader_ldsRoller__5cE1k\"};","import style from './Loader.module.css';\n\nfunction Loader() {\n  return (\n    <div className={style.overlay}>\n      <div className={style.ldsRoller}>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  grid-gap: 16px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  margin: 0 auto;\n  max-width: calc(100vw - 48px);\n  padding: 0;\n`;\n\nexport const CastItem = styled.li`\n  padding-bottom: 5px;\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n    0px 2px 1px rgb(0 0 0 / 20%);\n  border-radius: 0px 0px 4px 4px;\n`;\n\nexport const CastText = styled.p`\n  padding: 5px 10px;\n  font-size: 16px;\n  text-align: center;\n`;\n","// import { notFoundImg } from 'links/imgNotFound';\nimport { CastList, CastItem, CastText } from './MovieCast.styled';\nimport imageNotFaund from '../../images/imgNotFound.jpg';\n\nconst MovieCast = ({ credits }) => {\n  return (\n    <>\n      <CastList>\n        {credits &&\n          credits.map(({ id, profile_path, name, character }) => {\n            return (\n              <CastItem key={id}>\n                <img\n                  src={\n                    profile_path === null\n                      ? imageNotFaund\n                      : `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  }\n                  alt={name}\n                />\n                <CastText>{name}</CastText>\n                <CastText>Character: {character}</CastText>\n              </CastItem>\n            );\n          })}\n      </CastList>\n    </>\n  );\n};\nexport default MovieCast;\n","import axios from 'axios';\n\nconst getMovieCredits = async movieId => {\n  const config = {\n    url: `/movie/${movieId}/credits`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '65573c76cf88d807ccbaf09ca79feb15',\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.cast;\n};\n\nexport default getMovieCredits;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 20px 20px;\n  padding-bottom: 20px;\n  border-bottom: 2px solid;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport MovieCast from 'components/MovieCast';\nimport Loader from 'components/Loader';\nimport getMovieCredits from 'services/getMovieCredits';\n\nimport { Section } from './Cast.styled';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieCredits(movieId)\n      .then(response => {\n        setCredits(response);\n      })\n      .catch(error => setError(error.message))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error:{error}</p>}\n      <Section>\n        <MovieCast credits={credits} />\n      </Section>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["className","style","CastList","styled","CastItem","CastText","credits","map","id","profile_path","name","character","src","imageNotFaund","alt","getMovieCredits","movieId","config","url","baseURL","params","api_key","axios","response","data","cast","Section","useState","setCredits","isLoading","setIsLoading","error","setError","useParams","useEffect","then","catch","message","finally","Loader"],"sourceRoot":""}